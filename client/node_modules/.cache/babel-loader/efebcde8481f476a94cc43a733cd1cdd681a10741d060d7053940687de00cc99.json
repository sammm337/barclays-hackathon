{"ast":null,"code":"import { GoogleGenerativeAI } from \"@google/generative-ai\";\n// import dotenv from \"dotenv\";\n\n// dotenv.config();\n\nconst apiKey = \"AIzaSyAuBxYK-cy5hgQCCwfzG5InjQ7oRf4oFSA\";\nconst genAI = new GoogleGenerativeAI(apiKey);\nconst model = genAI.getGenerativeModel({\n  model: \"gemini-1.5-flash\"\n});\nconst generationConfig = {\n  temperature: 1,\n  topP: 0.95,\n  topK: 40,\n  maxOutputTokens: 8192,\n  responseMimeType: \"text/plain\"\n};\n\n//model to make a call\nexport const chatSession = model.startChat({\n  generationConfig,\n  history: []\n});","map":{"version":3,"names":["GoogleGenerativeAI","apiKey","genAI","model","getGenerativeModel","generationConfig","temperature","topP","topK","maxOutputTokens","responseMimeType","chatSession","startChat","history"],"sources":["/Users/samruddhishinde/Desktop/barclays/research-paper-analyzer/client/src/utils/AiModel.tsx"],"sourcesContent":["import { GoogleGenerativeAI, HarmCategory, HarmBlockThreshold } from \"@google/generative-ai\";\n// import dotenv from \"dotenv\";\n\n// dotenv.config();\n\n  const apiKey = \"AIzaSyAuBxYK-cy5hgQCCwfzG5InjQ7oRf4oFSA\";\n  const genAI = new GoogleGenerativeAI(apiKey);\n  \n  const model = genAI.getGenerativeModel({\n    model: \"gemini-1.5-flash\",\n  });\n  \n  const generationConfig = {\n    temperature: 1,\n    topP: 0.95,\n    topK: 40,\n    maxOutputTokens: 8192,\n    responseMimeType: \"text/plain\",\n  };\n  \n //model to make a call\n    export const chatSession = model.startChat({\n      generationConfig,\n      history: [\n      ],\n    });\n  \n   \n  \n  \n  "],"mappings":"AAAA,SAASA,kBAAkB,QAA0C,uBAAuB;AAC5F;;AAEA;;AAEE,MAAMC,MAAM,GAAG,yCAAyC;AACxD,MAAMC,KAAK,GAAG,IAAIF,kBAAkB,CAACC,MAAM,CAAC;AAE5C,MAAME,KAAK,GAAGD,KAAK,CAACE,kBAAkB,CAAC;EACrCD,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,MAAME,gBAAgB,GAAG;EACvBC,WAAW,EAAE,CAAC;EACdC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,EAAE;EACRC,eAAe,EAAE,IAAI;EACrBC,gBAAgB,EAAE;AACpB,CAAC;;AAEF;AACG,OAAO,MAAMC,WAAW,GAAGR,KAAK,CAACS,SAAS,CAAC;EACzCP,gBAAgB;EAChBQ,OAAO,EAAE;AAEX,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}